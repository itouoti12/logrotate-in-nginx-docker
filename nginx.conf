
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
# use docker logs
# error_log  /dev/stderr warn;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  main  '"$time_local" client=$remote_addr '
                      'method=$request_method request="$request" '
                      'request_length="$request_length" '
                      'request_uri="$request_uri" '
                      'request_body="$request_body" '
                      #   If the header contains a module and you want to output it in the log
                      #   'module="$http_module" '
                      #   If the cookie contains a sessionid and you want to output it in the log
                      #   'session_id="$cookie_sessionId" '
                      'status=$status bytes_sent=$bytes_sent '
                      'body_bytes_sent=$body_bytes_sent '
                      'referer=$http_referer '
                      'user_agent="$http_user_agent" '
                      'forwarded_for="$http_x_forwarded_for" '
                      'request_time=$request_time '
                      'upstream_addr=$upstream_addr '
                      'upstream_status=$upstream_status '
                      'upstream_response_time="$upstream_response_time"ms '
                      'upstream_connect_time="$upstream_connect_time"ms '
                      'upstream_header_time="$upstream_header_time"ms ';

    access_log  /var/log/nginx/access.log  main;
    # use docker logs
    # access_log  /dev/stdout  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
